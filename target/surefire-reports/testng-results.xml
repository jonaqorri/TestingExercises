<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="RunCucumberTest" duration-ms="388" started-at="2020-01-07T20:00:50Z" finished-at="2020-01-07T20:00:50Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:RunCucumberTest@7946e1f4]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Command line test" duration-ms="388" started-at="2020-01-07T20:00:50Z" finished-at="2020-01-07T20:00:50Z">
      <class name="RunCucumberTest">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:RunCucumberTest@7946e1f4]" name="setUpClass" is-config="true" duration-ms="86" started-at="2020-01-07T20:00:50Z" finished-at="2020-01-07T20:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:RunCucumberTest@7946e1f4]" name="runScenario" duration-ms="213" started-at="2020-01-07T20:00:50Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-07T20:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Signing in with correct credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login and Logout"]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[There are undefined steps]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: There are undefined steps
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:58)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:83)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:RunCucumberTest@7946e1f4]" name="runScenario" duration-ms="196" started-at="2020-01-07T20:00:50Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-07T20:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Signing in with incorrect credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login and Logout"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:RunCucumberTest@7946e1f4]" name="runScenario" duration-ms="211" started-at="2020-01-07T20:00:50Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-07T20:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[There are undefined steps]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: There are undefined steps
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:58)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:83)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:RunCucumberTest@7946e1f4]" name="runScenario" duration-ms="195" started-at="2020-01-07T20:00:50Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-07T20:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Access registration page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:RunCucumberTest@7946e1f4]" name="runScenario" duration-ms="195" started-at="2020-01-07T20:00:50Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-07T20:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check the user is registered through the header icon"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:RunCucumberTest@7946e1f4]" name="runScenario" duration-ms="195" started-at="2020-01-07T20:00:50Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-07T20:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Logging out"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login and Logout"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:RunCucumberTest@7946e1f4]" name="runScenario" duration-ms="195" started-at="2020-01-07T20:00:50Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-01-07T20:00:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check the user is registered through the menu"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:RunCucumberTest@7946e1f4]" name="tearDownClass" is-config="true" duration-ms="47" started-at="2020-01-07T20:00:50Z" finished-at="2020-01-07T20:00:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- RunCucumberTest -->
    </test> <!-- Command line test -->
  </suite> <!-- RunCucumberTest -->
</testng-results>
